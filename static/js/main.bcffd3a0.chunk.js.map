{"version":3,"sources":["components/Card.js","images/thechild.png","images/mandalorian.jpg","images/caradune.jpg","images/kuill.jpg","images/greefkeega.jpg","images/bokatan.jpg","images/ig11.webp","images/thearmorer.jpg","images/theclient.jpg","images/mayfield.png","images/pelimotto.jpg","cardData.js","images/moffgideon.jpg","components/CardContainer.js","components/Header.js","images/TheChildBody.png","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","style","background","bgcolor","onClick","handleClick","src","image","alt","name","cards","title","description","bgColor","thechild","mandalorian","pelimotto","greefkeega","bokatan","armorer","client","mayfield","ig11","kuill","caradune","CardContainer","useState","cardData","setCards","useEffect","nextCards","arr","i","length","randomIndex","Math","floor","random","shuffleCards","map","card","Header","score","highScore","Game","addCard","setScore","setHighScore","increaseScore","resetScore","increaseHighScore","e","currentTarget","querySelector","innerHTML","includes","prevArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcffd3a0.chunk.js","sourcesContent":["const Card = (props) => {\n  return (\n    <div\n      className=\"individual-card-container\"\n      style={{ background: props.bgcolor }}\n      onClick={props.handleClick}\n    >\n      <div className=\"card-content-container\">\n        <img src={props.image} alt={`${props.name}`} />\n        <h3>{props.name}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/thechild.da8ddcfd.png\";","export default __webpack_public_path__ + \"static/media/mandalorian.b6c814a7.jpg\";","export default __webpack_public_path__ + \"static/media/caradune.7753fc00.jpg\";","export default __webpack_public_path__ + \"static/media/kuill.121ae26a.jpg\";","export default __webpack_public_path__ + \"static/media/greefkeega.9e6e19c6.jpg\";","export default __webpack_public_path__ + \"static/media/bokatan.e8bffea7.jpg\";","export default __webpack_public_path__ + \"static/media/ig11.11d1a620.webp\";","export default __webpack_public_path__ + \"static/media/thearmorer.08237cc9.jpg\";","export default __webpack_public_path__ + \"static/media/theclient.6a8944ef.jpg\";","export default __webpack_public_path__ + \"static/media/mayfield.844bcbde.png\";","export default __webpack_public_path__ + \"static/media/pelimotto.459d869e.jpg\";","import thechild from \"./images/thechild.png\";\nimport mandalorian from \"./images/mandalorian.jpg\";\nimport caradune from \"./images/caradune.jpg\";\nimport kuill from \"./images/kuill.jpg\";\nimport greefkeega from \"./images/greefkeega.jpg\";\nimport bokatan from \"./images/bokatan.jpg\";\nimport ig11 from \"./images/ig11.webp\";\nimport armorer from \"./images/thearmorer.jpg\";\nimport client from \"./images/theclient.jpg\";\nimport mayfield from \"./images/mayfield.png\";\nimport pelimotto from \"./images/pelimotto.jpg\";\nimport moffgideon from \"./images/moffgideon.jpg\";\n\nlet cards = [\n  {\n    title: \"The Child\",\n    description: \"\",\n    bgColor: \"rgb(10, 193, 56)\",\n    image: thechild,\n  },\n  {\n    title: \"The Mandalorian\",\n    description: \"\",\n    bgColor: \"rgb(179, 187, 187)\",\n    image: mandalorian,\n  },\n  {\n    title: \"Moff Gideon\",\n    description: \"\",\n    bgColor: \"rgb(0, 0, 0)\",\n    image: moffgideon,\n  },\n  {\n    title: \"Peli Motto\",\n    description: \"\",\n    bgColor: \"rgb(128, 64, 3)\",\n    image: pelimotto,\n  },\n  {\n    title: \"Greef Keega\",\n    description: \"\",\n    bgColor: \"rgb(62, 49, 240)\",\n    image: greefkeega,\n  },\n  {\n    title: \"Bo-Katan Kryze\",\n    description: \"\",\n    bgColor: \"rgb(139, 132, 245)\",\n    image: bokatan,\n  },\n  {\n    title: \"The Armorer\",\n    description: \"\",\n    bgColor: \"rgb(134, 3, 33)\",\n    image: armorer,\n  },\n  {\n    title: \"The Client\",\n    description: \"\",\n    bgColor: \"rgb(234, 0, 54)\",\n    image: client,\n  },\n  {\n    title: \"Mayfield\",\n    description: \"\",\n    bgColor: \"rgb(6, 243, 45)\",\n    image: mayfield,\n  },\n  {\n    title: \"IG-11\",\n    description: \"\",\n    bgColor: \"rgb(84, 88, 85)\",\n    image: ig11,\n  },\n  {\n    title: \"Kuill\",\n    description: \"\",\n    bgColor: \"rgb(243, 127, 11)\",\n    image: kuill,\n  },\n  {\n    title: \"Cara Dune\",\n    description: \"\",\n    bgColor: \"rgb(133, 42, 141)\",\n    image: caradune,\n  },\n];\n\nexport default cards;\n","export default __webpack_public_path__ + \"static/media/moffgideon.20bb8d92.jpg\";","import { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport cardData from \"../cardData\";\n\nconst CardContainer = (props) => {\n  const { handleClick } = props;\n  const [cards, setCards] = useState(cardData);\n\n  // Uses the Durstenfield shuffle to rearrange array - https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\n  const shuffleCards = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const randomIndex = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[randomIndex]] = [arr[randomIndex], arr[i]];\n    }\n  };\n\n  useEffect(() => {\n    let nextCards = [...cards];\n    shuffleCards(nextCards);\n    setCards(nextCards);\n  }, [handleClick]);\n\n  return (\n    <div className=\"card-container\">\n      {cards.map((card) => (\n        <Card\n          name={card.title}\n          image={card.image}\n          bgcolor={card.bgColor}\n          handleClick={handleClick}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardContainer;\n","import TheChildBody from \"../images/TheChildBody.png\";\n\nconst Header = (props) => {\n  const { score, highScore } = props;\n\n  return (\n    <div className=\"header\">\n      <h2>Mandalorian Memory Mangle</h2>\n      <h3>Score: {score}</h3>\n      <h3>High Score: {highScore}</h3>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/TheChildBody.af700fa8.png\";","import { useState, useEffect } from \"react\";\nimport CardContainer from \"./CardContainer\";\nimport Header from \"./Header\";\n\nconst Game = () => {\n  const [cards, addCard] = useState([]);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  const handleClick = (e) => {\n    const card = e.currentTarget\n      .querySelector(\".card-content-container\")\n      .querySelector(\"h3\").innerHTML;\n\n    if (!cards.includes(card)) {\n      addCard((prevArray) => [...prevArray, card]);\n      increaseScore();\n    } else {\n      increaseHighScore();\n      resetScore();\n    }\n  };\n\n  const increaseScore = () => {\n    setScore(score + 1);\n  };\n\n  const resetScore = () => {\n    setScore(0);\n    addCard([]);\n  };\n\n  const increaseHighScore = () => {\n    if (score > highScore) {\n      setHighScore(score);\n    }\n  };\n\n  return (\n    <div>\n      <Header score={score} highScore={highScore} />\n      <CardContainer\n        handleClick={handleClick}\n        score={score}\n        highScore={highScore}\n      />\n    </div>\n  );\n};\n\nexport default Game;\n","import \"./App.css\";\nimport Card from \"./components/Card\";\nimport cards from \"./cardData\";\nimport Game from \"./components/Game\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}